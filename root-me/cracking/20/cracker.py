#!/usr/bin/python
s3 = [ 
0xf5,0xf5,0xe9,0xc5,0xe4,0xcd,0xd8,0xeb,0x9e,0xba,0xc3,0xf3,
0xee,0x22,0xc1,0xdc,0xf8,0xf5,0xf5,0xf5,0x99,0x48,0xc0,0xfc,
0xcc,0xd8,0xeb,0xde,0xdf,0xc7,0xeb,0xde,0x03,0x64,0xc1,0xe1]
 
structs = [s3, 0x24,  [0xf1, 0xa1, 0x04, 0x08, 0x01, 0x01, 0x00, 0x00, 0x9c, 0x25, 0x05, 0x08]] 


def unsigned8(x): 
    if(x < 0):
        return x + 2**8
    else:
        return x

# 0xf1 = unsigned8((0xf5 ^ k) - 0xaa)) ^  unsigned((0x0f ^ k) - 0xaa) ^ unsigned((0xf1 ^ k) - 0xaa)     


def modK(k, x):
    return unsigned8((x ^ k) - 0xaa) % 2**8

matches = [0,0,0 ,0,0,0,0,0,0,0,0,0]

for i in range(0, 0xc):
    #print("byte nÂ°" + str(i))
    for k in range(0,256):
        xored = 0
        #print("trying " + hex(k))
        for j in range(0,int(structs[1]/0xC)):
            xored = xored ^ modK(k,s3[0xC*j+i])
            #print("xored : " + hex(xored))
        if xored == structs[2][i]:
            #print("match" + hex(k))
            matches[i] = k

for k in matches:
    print(str(k) + "/" + hex(k) + "/" + chr(k))


