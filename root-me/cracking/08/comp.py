#!/usr/bin/python


def rol(i,n):
    return i << n | i >> (32 - n)

def ror(i, n) :
    return i >> n | i << (32 - n)

def ror(i):
    return i >> 1 | i << 31

def int4(i):
    return i % 2**32

magic = [0x1e,0xcd,0x2a,0xd5,0x34,0x87,0xfc,0x78,0x64,0x35,0x9d,0xec,0xde,0x15,0xac,0x97,0x99,0xaf,0x96,0xda,0x79,0x26,0x4f,0x32,0xe0]
magic.reverse()

codes = [
0xb8, 0x04, 0x00, 0x00, 0x00, 0xbb, 0x01, 0x00, 0x00, 0x00, 0xb9, 0xa1, 0x91, 0x04, 0x08, 0xba,
0x26, 0x00, 0x00, 0x00, 0xcd, 0x80, 0xb8, 0x03, 0x00, 0x00, 0x00, 0x31, 0xdb, 0xb9, 0x88, 0x91,
0x04, 0x08, 0xba, 0x33, 0x00, 0x00, 0x00, 0xcd, 0x80, 0x31, 0xc9, 0xb8, 0x80, 0x80, 0x04, 0x08,
0xbb, 0x23, 0x81, 0x04, 0x08, 0xe8, 0x5b, 0x00, 0x00, 0x00, 0x89, 0xca, 0xb9, 0x19, 0x00, 0x00,
0x00, 0xb8, 0x55, 0x91, 0x04, 0x08, 0xbb, 0x88, 0x91, 0x04, 0x08, 0xd1, 0xca, 0x8a, 0x44, 0x08,
0xff, 0x8a, 0x5c, 0x0b, 0xff, 0x30, 0xd8, 0x30, 0xd0, 0x75, 0x1b, 0x49, 0x75, 0xe3, 0xb8, 0x04,
0x00, 0x00, 0x00, 0xbb, 0x01, 0x00, 0x00, 0x00, 0xb9, 0x24, 0x91, 0x04, 0x08, 0xba, 0x26, 0x00,
0x00, 0x00, 0xcd, 0x80, 0xeb, 0x16, 0xb8, 0x04, 0x00, 0x00, 0x00, 0xbb, 0x01, 0x00, 0x00, 0x00,
0xb9, 0x4a, 0x91, 0x04, 0x08, 0xba, 0x0b, 0x00, 0x00, 0x00, 0xcd, 0x80, 0xb8, 0x01, 0x00, 0x00,
0x00, 0x31, 0xdb, 0xcd, 0x80, 0x29, 0xc3, 0x31, 0xc9, 0x02, 0x08, 0xc1, 0xc1, 0x03, 0x40, 0x4b,
0x75, 0xf7, 0xc3
]

ecx = 0
for opcode in codes:
    ecx = int4(ecx + opcode)
    ecx = rol(ecx, 3)

checksum = 0xac77e166
print(hex(ecx))

r = []
for m in magic:
    checksum = ror(checksum, 1) % 2**32
    # print(checksum)
    k = (m ^ checksum) % 256
    # print(chr(k))
    r.append(chr(k))

r.reverse()
print(''.join(r))
